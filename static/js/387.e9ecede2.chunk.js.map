{"version":3,"file":"static/js/387.e9ecede2.chunk.js","mappings":"sPA8CA,UAxCgB,WACZ,IAAQA,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA8BE,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KAwBA,OAtBAC,EAAAA,EAAAA,YAAU,WAAM,wCAEZ,8EACI,IACIC,EAAAA,GAA6BR,GAASS,MAAK,YAAkB,IAAfC,EAAc,EAAdA,QACnB,IAAnBA,EAAQC,OAIZP,EAAWM,GAHPE,EAAAA,GAAAA,MAAY,0BAMtB,SACEA,EAAAA,GAAAA,MAAY,gBAAiB,CACzBC,MAAO,YAZnB,4CAFY,sBACZP,GAAa,GADD,mCAkBZQ,GACAR,GAAa,KACd,CAACN,KAEG,gCACFK,IAAa,SAAC,IAAD,IACbF,EAAQQ,OAAS,IAAK,wBAClBR,EAAQY,KAAI,gBAAGC,EAAH,EAAGA,OAAQC,EAAX,EAAWA,QAASC,EAApB,EAAoBA,GAApB,OACT,2BACI,wBAAKF,KACL,uBAAIC,MAFCC","sources":["views/Reviews/Reviews.jsx"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { toast } from 'react-toastify';\nimport * as reviewsMovie from 'services/api';\nimport { Spinner } from \"components/Loader/Loader\";\n\nconst Reviews = () => {\n    const { movieId } = useParams();\n    const [reviews, setReviews] = useState('');\n    const [isLoading, setIsLoading] = useState(false);\n\n    useEffect(() => {\n        setIsLoading(true);\n        async function fetchReviewsMovies() {\n            try {\n                reviewsMovie.getReviewsMovie(movieId).then(({ results }) => {\n                    if (results.length === 0) {\n                        toast.error('No such information');\n                        return\n                    }\n                    setReviews(results);\n        \n                })\n            } catch {\n                toast.error('Nothihg found', {\n                    theme: 'colored',\n                });\n            }\n        }\n        fetchReviewsMovies();\n        setIsLoading(false);\n    }, [movieId]);\n\n    return <>\n        {isLoading && <Spinner />}\n        {reviews.length > 0 && <ul>\n            {reviews.map(({ author, content, id }) =>\n                <li key={id}>\n                    <h3>{author}</h3>\n                    <p>{content}</p>\n                </li>\n            )}\n        </ul>}\n    </>;\n}\n\nexport default Reviews;"],"names":["movieId","useParams","useState","reviews","setReviews","isLoading","setIsLoading","useEffect","reviewsMovie","then","results","length","toast","theme","fetchReviewsMovies","map","author","content","id"],"sourceRoot":""}