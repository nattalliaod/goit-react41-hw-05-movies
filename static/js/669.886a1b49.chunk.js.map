{"version":3,"file":"static/js/669.886a1b49.chunk.js","mappings":"yTAEaA,EAAWC,EAAAA,EAAAA,GAAH,oJAQRC,EAAWD,EAAAA,EAAAA,GAAH,0GAMRE,EAAgBF,EAAAA,EAAAA,GAAH,iEAKbG,EAAeH,EAAAA,EAAAA,IAAH,mKAQZI,EAAcJ,EAAAA,EAAAA,EAAH,iE,SCmBxB,EAxCa,WACT,IAAQK,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAoCE,EAAAA,EAAAA,UAAS,IAA7C,eAAOC,EAAP,KAAmBC,EAAnB,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KAmBA,OAjBAC,EAAAA,EAAAA,YAAU,WAAM,wCAEZ,8EACI,IACIC,EAAAA,GAAuBR,GAASS,MAAK,YAAe,IAAZC,EAAW,EAAXA,KACpCN,EAAcM,GACdJ,GAAa,MAEnB,SACEK,EAAAA,GAAAA,MAAY,gBAAiB,CACzBC,MAAO,YARnB,4CAFY,sBACZN,GAAa,GADD,mCAcZO,KACD,CAACb,KAEG,gCACFK,IAAa,SAAC,IAAD,IACfF,EAAWW,OAAS,GAAM,SAACpB,EAAD,UACpBS,EAAWY,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,UAAWC,EAAlB,EAAkBA,KAAMC,EAAxB,EAAwBA,aAAxB,OACZ,UAACvB,EAAD,YACI,SAACE,EAAD,CAAcsB,IAAKD,EAAY,yCAAqCA,GAAiBE,EAAYC,IAAKJ,KACtG,SAACrB,EAAD,UAAgBqB,KAChB,wCAAc,uBAAID,SAHPD,SAOvB,SAACjB,EAAD","sources":["views/Cast/Cast.styled.js","views/Cast/Cast.jsx"],"sourcesContent":["import styled from \"@emotion/styled\";\n\nexport const CastList = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  margin-left: calc(-1 * 20px);\n  margin-top: calc(-1 * 20px);\n  list-style: none;\n`;\n\nexport const CastItem = styled.li`\n  flex-basis: calc(100% / 3 - 170px);\n  margin-left: 20px;\n  margin-top: 35px;\n`;\n\nexport const NameCharacter = styled.h3`\n  font-size: 18px;\n  font-weight: 800;\n`;\n\nexport const ImgCharacter = styled.img`\n  width: 250px;\n  height: 85%;\n  object-fit: cover;\n  border-radius: 5px;\n  transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\n`;\n\nexport const DefaultText = styled.p`\n  font-weight: 600;\n  font-size: 18px;\n`;","import { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { toast } from 'react-toastify';\nimport * as castMovie from 'services/api';\nimport { Spinner } from \"components/Loader/Loader\";\nimport defaultImg from 'images/no image.jpg';\nimport { CastList, CastItem, NameCharacter, ImgCharacter, DefaultText } from \"./Cast.styled\";\n\nconst Cast = () => {\n    const { movieId } = useParams();\n    const [characters, setCharacters] = useState([]);\n    const [isLoading, setIsLoading] = useState(false);\n\n    useEffect(() => {\n        setIsLoading(true);\n        async function fetchCastMovies() {\n            try {\n                castMovie.getCastMovie(movieId).then(({ cast }) => {\n                    setCharacters(cast);\n                    setIsLoading(false);\n                })\n            } catch {\n                toast.error('Nothing found', {\n                    theme: 'colored',\n                });\n            }\n        }\n        fetchCastMovies();\n    }, [movieId]);\n    \n    return <>\n        {isLoading && <Spinner />}\n     { characters.length > 0 ?  (<CastList>\n            {characters.map(({ id, character, name, profile_path }) => \n                <CastItem key={id}>\n                    <ImgCharacter src={profile_path ? `https://image.tmdb.org/t/p/w500${profile_path}` : defaultImg} alt={name} />\n                    <NameCharacter>{name}</NameCharacter>\n                    <p>Character: <b>{character}</b></p>\n                </CastItem>)}\n\n        </CastList>) :  (\n        <DefaultText>\n          There is no information about actors for this movie.\n        </DefaultText>\n      )}\n    </>\n}\n\nexport default Cast;"],"names":["CastList","styled","CastItem","NameCharacter","ImgCharacter","DefaultText","movieId","useParams","useState","characters","setCharacters","isLoading","setIsLoading","useEffect","castMovie","then","cast","toast","theme","fetchCastMovies","length","map","id","character","name","profile_path","src","defaultImg","alt"],"sourceRoot":""}