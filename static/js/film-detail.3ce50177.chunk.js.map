{"version":3,"file":"static/js/film-detail.3ce50177.chunk.js","mappings":"oPAEaA,EAAgBC,EAAAA,EAAAA,QAAH,0FAMbC,EAASD,EAAAA,EAAAA,IAAH,uEAKNE,EAAQF,EAAAA,EAAAA,IAAH,gEAKLG,EAAQH,EAAAA,EAAAA,GAAH,gDAILI,EAAQJ,EAAAA,EAAAA,EAAH,2FAMLK,EAAOL,EAAAA,EAAAA,KAAH,gDAIJM,EAAON,EAAAA,EAAAA,KAAH,sKAUJO,EAAaP,EAAAA,EAAAA,GAAH,6CAIVQ,EAAaR,EAAAA,EAAAA,GAAH,mS,mBC1CjBS,EAAiB,SAAC,GAAe,IAAbC,EAAY,EAAZA,MAChBC,EAAqED,EAArEC,MAAOC,EAA8DF,EAA9DE,aAAcC,EAAgDH,EAAhDG,aAAcC,EAAkCJ,EAAlCI,YAAaC,EAAqBL,EAArBK,SAAUC,EAAWN,EAAXM,OAEhE,OACI,UAACjB,EAAD,YACI,SAACE,EAAD,WACI,SAACC,EAAD,CACIe,IAAKH,EAAW,yCAC4BA,GAClCI,EACVC,IAAKR,OAIb,4BACI,UAACR,EAAD,WAAQQ,EAAR,KAAe,gCAAQC,EAAaQ,UAAU,EAAG,GAAlC,WAEf,UAAChB,EAAD,2BAAmB,UAACC,EAAD,WAAsB,GAAfQ,EAAP,QACf,SAACP,EAAD,UAAOO,QAEX,UAACT,EAAD,yBAAiB,SAACC,EAAD,UAAOU,QAExB,SAACR,EAAD,UACKS,EAAOK,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,KAAP,OACR,SAACf,EAAD,WACI,0BAAOe,KADMD,eAUzCb,EAAee,aAAe,CAC5Bd,MAAOe,IAAAA,MAAgB,CACrBb,aAAc,GACdC,aAAc,EACdC,YAAaI,EACbH,SAAU,GACVC,OAAQ,MAoBZ,S,iCCvDA,IAAIU,EAAuBC,EAAQ,MAEnC,SAASC,KACT,SAASC,KACTA,EAAuBC,kBAAoBF,EAE3CG,EAAOC,QAAU,WACf,SAASC,EAAKC,EAAOC,EAAUC,EAAeC,EAAUC,EAAcC,GACpE,GAAIA,IAAWb,EAAf,CAIA,IAAIc,EAAM,IAAIC,MACZ,mLAKF,MADAD,EAAIjB,KAAO,sBACLiB,GAGR,SAASE,IACP,OAAOT,EAFTA,EAAKU,WAAaV,EAMlB,IAAIW,EAAiB,CACnBC,MAAOZ,EACPa,OAAQb,EACRc,KAAMd,EACNe,KAAMf,EACNgB,OAAQhB,EACRiB,OAAQjB,EACRkB,OAAQlB,EACRmB,OAAQnB,EAERoB,IAAKpB,EACLqB,QAASZ,EACTa,QAAStB,EACTuB,YAAavB,EACbwB,WAAYf,EACZgB,KAAMzB,EACN0B,SAAUjB,EACVkB,MAAOlB,EACPmB,UAAWnB,EACXoB,MAAOpB,EACPqB,MAAOrB,EAEPsB,eAAgBnC,EAChBC,kBAAmBF,GAKrB,OAFAgB,EAAenB,UAAYmB,EAEpBA,I,qBC9CPb,EAAOC,QAAUL,EAAQ,IAARA,I,8BCNnBI,EAAOC,QAFoB","sources":["views/FilmDetailInfo/FilmDetailInfo.styled.js","views/FilmDetailInfo/FilmDetailInfo.jsx","../node_modules/prop-types/factoryWithThrowingShims.js","../node_modules/prop-types/index.js","../node_modules/prop-types/lib/ReactPropTypesSecret.js"],"sourcesContent":["import styled from \"@emotion/styled\";\n\nexport const MovieInfoCard = styled.article`\n  position: relative;\n  display: flex;\n  padding-bottom: 20px;\n`;\n\nexport const ImgBox = styled.div`\n  margin-bottom: 20px;\n  margin-right: 20px;\n`;\n\nexport const Image = styled.img`\n  border-radius: 5px;\n  width: 300px;\n`;\n\nexport const Title = styled.h1`\n  margin-bottom: 20px;\n`;\n\nexport const Score = styled.p`\n  font-weight: 700;\n  margin-bottom: 20px;\n  margin-right: 5px;\n`;\n\nexport const Text = styled.span`\n  font-weight: normal;\n`;\n\nexport const Vote = styled.span`\n  position: absolute;\n  top: 10px;\n  left: 10px;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: #929197;\n  color: #ffffff;\n`;\n\nexport const GenresList = styled.ul`\n  margin-top: 10px;\n`;\n\nexport const GenresItem = styled.li`\n  display: flex;\n  align-items: center;\n\n  :not(:last-child) {\n  margin-bottom: 10px;\n}\n\n  ::before {\n  content: ' ';\n  display: inline-block;\n  width: 14px;\n  height: 14px;\n  border-radius: 50%;\n  margin-right: 10px;\n\n  background-color: #929197;\n}\n`;","import PropTypes from 'prop-types';\nimport { MovieInfoCard, ImgBox, Image, Title,Score, Text, Vote, GenresList, GenresItem } from './FilmDetailInfo.styled';\nimport defaultImg from 'images/no image.jpg';\n\nconst FilmDetailInfo = ({ movie }) => {\n  const { title, release_date, vote_average, poster_path, overview, genres } = movie;\n\n    return (\n        <MovieInfoCard>\n            <ImgBox>\n                <Image\n                    src={poster_path\n                            ? `https://image.tmdb.org/t/p/w500${poster_path}`\n                            : defaultImg}\n                    alt={title}\n                />\n            </ImgBox>\n\n            <div>\n                <Title>{title} <span>({release_date.substring(0, 4)})</span></Title>\n\n                <Score>User score: <Text>{vote_average * 10}%</Text>\n                    <Vote>{vote_average}</Vote></Score>\n\n                <Score>Overview: <Text>{overview}</Text></Score>\n\n                <GenresList>\n                    {genres.map(({ id, name }) => (\n                        <GenresItem key={id}>\n                            <span>{name}</span>\n                        </GenresItem>\n                    ))}\n                </GenresList>\n            </div>\n        </MovieInfoCard>\n    );\n};\n\nFilmDetailInfo.defaultProps = {\n  movie: PropTypes.shape({\n    release_date: '',\n    vote_average: 0,\n    poster_path: defaultImg,\n    overview: '',\n    genres: [],\n  }),\n};\n\nFilmDetailInfo.propTypes = {\n  movie: PropTypes.shape({\n    title: PropTypes.string,\n    release_date: PropTypes.string,\n    vote_average: PropTypes.number,\n    poster_path: PropTypes.string,\n    overview: PropTypes.string,\n    genres: PropTypes.arrayOf(\n      PropTypes.shape({\n        id: PropTypes.number,\n        name: PropTypes.string,\n      }),\n    ),\n  }),\n};\n\nexport default FilmDetailInfo;","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n\nfunction emptyFunction() {}\nfunction emptyFunctionWithReset() {}\nemptyFunctionWithReset.resetWarningCache = emptyFunction;\n\nmodule.exports = function() {\n  function shim(props, propName, componentName, location, propFullName, secret) {\n    if (secret === ReactPropTypesSecret) {\n      // It is still safe when called from React.\n      return;\n    }\n    var err = new Error(\n      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n      'Use PropTypes.checkPropTypes() to call them. ' +\n      'Read more at http://fb.me/use-check-prop-types'\n    );\n    err.name = 'Invariant Violation';\n    throw err;\n  };\n  shim.isRequired = shim;\n  function getShim() {\n    return shim;\n  };\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n  var ReactPropTypes = {\n    array: shim,\n    bigint: shim,\n    bool: shim,\n    func: shim,\n    number: shim,\n    object: shim,\n    string: shim,\n    symbol: shim,\n\n    any: shim,\n    arrayOf: getShim,\n    element: shim,\n    elementType: shim,\n    instanceOf: getShim,\n    node: shim,\n    objectOf: getShim,\n    oneOf: getShim,\n    oneOfType: getShim,\n    shape: getShim,\n    exact: getShim,\n\n    checkPropTypes: emptyFunctionWithReset,\n    resetWarningCache: emptyFunction\n  };\n\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nif (process.env.NODE_ENV !== 'production') {\n  var ReactIs = require('react-is');\n\n  // By explicitly using `prop-types` you are opting into new development behavior.\n  // http://fb.me/prop-types-in-prod\n  var throwOnDirectAccess = true;\n  module.exports = require('./factoryWithTypeCheckers')(ReactIs.isElement, throwOnDirectAccess);\n} else {\n  // By explicitly using `prop-types` you are opting into new production behavior.\n  // http://fb.me/prop-types-in-prod\n  module.exports = require('./factoryWithThrowingShims')();\n}\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\nmodule.exports = ReactPropTypesSecret;\n"],"names":["MovieInfoCard","styled","ImgBox","Image","Title","Score","Text","Vote","GenresList","GenresItem","FilmDetailInfo","movie","title","release_date","vote_average","poster_path","overview","genres","src","defaultImg","alt","substring","map","id","name","defaultProps","PropTypes","ReactPropTypesSecret","require","emptyFunction","emptyFunctionWithReset","resetWarningCache","module","exports","shim","props","propName","componentName","location","propFullName","secret","err","Error","getShim","isRequired","ReactPropTypes","array","bigint","bool","func","number","object","string","symbol","any","arrayOf","element","elementType","instanceOf","node","objectOf","oneOf","oneOfType","shape","exact","checkPropTypes"],"sourceRoot":""}